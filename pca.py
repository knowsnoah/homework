# -*- coding: utf-8 -*-
"""pca

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12BzBS0WnlvplHX8wQ6hsrpqOBDCroi2P
"""

# -------------------------------------------------------------------------
# AUTHOR: Noah Ojeda
# FILENAME: heart_disease_dataset.csv
# SPECIFICATION: Apply PCA repeatedly to the heart disease dataset, each time
# removing one distinct feature, report PC1 variance per run,
# and print the maximal PC1 variance observed.
# FOR: CS 4440 (Data Mining) - Assignment #2
# TIME SPENT: ~1 hr
# -----------------------------------------------------------*/
#importing some Python libraries
import numpy as np
import pandas as pd
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler

#Load the data
#--> add your Python code here
df = pd.read_csv('heart_disease_dataset.csv')
df = df.select_dtypes(include="number") #keeping only numeric values

#Get the number of features
#--> add your Python code here
num_features = len(df.columns)

features = []
for i in range(len(df.columns)): #list of the feature names
  features.append(df.columns[i])

# Run PCA using 9 features, removing one feature at each iteration
pc1_variances = []
removed_features = []

for i in range(num_features):
  # Create a new dataset by dropping the i-th feature
  # --> add your Python code here
  dropped_feature = features[i]
  reduced_data = df.drop(columns=[dropped_feature])

  # Standardize the data after removing the feature
  scaler = StandardScaler()
  scaled_data = scaler.fit_transform(reduced_data)

  # Run PCA on the reduced dataset
  # --> add your Python code here
  pca = PCA(n_components=1)
  pca.fit(scaled_data)

  #Store PC1 variance and the feature removed
  #Use pca.explained_variance_ratio_[0] and df_features.columns[i] for that
  # --> add your Python code here
  pc1_var = pca.explained_variance_ratio_[0]
  pc1_variances.append(pc1_var)
  removed_features.append(dropped_feature)

  print(f"Removing {dropped_feature}: PC1 variance = {pc1_var: 0.5f}")


# Find the maximum PC1 variance
# --> add your Python code here
max_pc1 = -1
for i in range(len(pc1_variances)):
  if pc1_variances[i] > max_pc1:
    max_pc1 = pc1_variances[i]
    max_feature = removed_features[i]

#Print results
#Use the format: Highest PC1 variance found: ? when removing ?
print(f"heightest PC1 variance found: = {max_pc1:0.5f} when removing {max_feature}")